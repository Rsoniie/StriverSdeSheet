# include<bits/stdc++.h>
long f(int *d, int i, int v, vector<vector<long>> &dp)
{
   if(i == 0)
   {
        if(v%d[0] == 0)
        {
            return 1;
        }
            return 0;
        
   }
   if(dp[i][v] != -1)
   {
       return dp[i][v];
   }
   long  ntake = 0+f(d, i-1, v, dp);
   long  take = 0;
   if(d[i] <= v)
   {
       take = f(d, i, v-d[i], dp);
   }

   return  dp[i][v] =   (ntake+take);
}
long countWaysToMakeChange(int *denominations, int n, int value)
{
    vector<vector<long>> dp(n, vector<long> (value+1, -1));
    return f(denominations, n-1, value,dp);
}
