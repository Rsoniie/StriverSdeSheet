#include <bits/stdc++.h> 
int f(vector<vector<int>>&vv, int i, int j, vector<vector<int>> &dp)
{
    if(i == 0 && j == 0)
    {
        return vv[i][j];
    }
    if(i < 0 || j<0)
    {
        return 1e9;

    }

    if(dp[i][j] != -1)
    {
        return dp[i][j];
    }

    int up = vv[i][j] + f(vv, i-1, j, dp);

   int left = vv[i][j] +f(vv, i, j-1, dp);

   return   dp[i][j] = min(up, left);

}

int minSumPath(vector<vector<int>> &grid) {
    int n = grid.size();
    int m = grid[0].size();
    vector<vector<int>> dp(n, vector<int> (m, -1));
    return f(grid, n-1, m-1,dp);
}
