/*****************************************************

    Following is the Binary Tree node structure:
    
    class BinaryTreeNode {
        public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
        
        ~BinaryTreeNode() {
            if(left) 
                delete left;
            if(right) 
                delete right;
        }
    };

******************************************************/

bool check(BinaryTreeNode<int>*root1, BinaryTreeNode<int>*root2)
{
    if(root1 == NULL || root2 == NULL)
    {
         return (root1 == root2);
    }
    bool da = (root1-> data == root2->data);
    bool c1 = check(root1 -> left, root2 -> right);
    bool c2 = check(root1-> right, root2 -> left);

    return c1&&c2&&da;

}
bool isSymmetric(BinaryTreeNode<int>* root)
{
    // Write your code here. 
    if(root == NULL)
    {
        return true;
    }  

    BinaryTreeNode<int>*root1 = root;
   BinaryTreeNode<int>*root2 = root; 

    return check(root1, root2);
}
