#include <bits/stdc++.h> 
/**********************************************************

    Following is the Binary Tree Node structure:

    template <typename T>
    class BinaryTreeNode {
        public: 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }

        ~BinaryTreeNode() {
            if (left)
                delete left;
            if (right)
                delete right;
        }
    };
***********************************************************/
void inorder(BinaryTreeNode<int> *root, vector<int> &ans)
{
    if(root == NULL)
    {
        return ;
    }

    inorder(root -> left, ans);
    ans.push_back(root -> data);
    inorder(root -> right, ans);
}
bool pairSumBst(BinaryTreeNode<int> *root, int k)
{
    vector<int> ans;
    inorder(root , ans);
    int n = ans.size();
    int s=0;
    int e = n-1;

    while(s<e)
    {
        int sum = ans[s]+ans[e];
        if(sum == k)
        {
            return true;
        }
        else if(sum > k)
        {
            e--;
        }
        else 
        {
            s++;
        }
    }

    return false;
}
