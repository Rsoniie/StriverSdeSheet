 #include<bits/stdc++.h>

 vector<int> nt(vector<int>&v, int n)
 {
   stack<int> st;
   st.push(-1);
   vector<int> ans(n);
   for(int i=n-1;i>=0;i--)
   {
     while(st.top() != -1 && v[st.top()] >= v[i])
     {
       st.pop();
     }
      ans[i] = st.top();
     st.push(i);

   }

   return ans;
 }
  vector<int> pr(vector<int>&v, int n)
 {
   stack<int> st;
   st.push(-1);
   vector<int> ans(n);
   for(int i=0;i<n;i++)
   {
     while(st.top() != -1 && v[st.top()] >= v[i])
     {
       st.pop();
     }
      ans[i] = st.top();
     st.push(i);

   }

   return ans;
 }
 int largestRectangle(vector < int > & v) {
   /*int maxi = INT_MIN;
   int n = v.size();
   for(int i=0;i<n;i++)
   {
     int j=i;
     int l=0;
       while(j>=0)
       {
         if(v[j]>=v[i])
         {
           l++;
         }
         else {
           break;
         }
         j--;
       }


       int r=0;
       int k=i;
       while(k<n)
       {
         if(v[k] >= v[i])
         {
           r++;
         }
         else{
           break;
         }
         k++;
       }

       int area = (r+l-1)*v[i];
       maxi = max(maxi, area);

       
   }

   return maxi;*/
   int n = v.size();

   vector<int> nxt;
   nxt = nt(v, n);
   vector<int> prv;
   prv = pr(v, n);

   int maxi = INT_MIN;
   for(int i=0;i<n;i++)
   {
     int l = v[i];
     if(nxt[i] == -1)
     {
       nxt[i] = n;
     }

    int b = (nxt[i]-prv[i]-1);
     int area = l*b;
     maxi = max(area, maxi);
   }

   return maxi;
 }
