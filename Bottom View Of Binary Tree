#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

   vector<int> ans;
    if(root == NULL)
    {
        return ans;
    }

    queue<pair<BinaryTreeNode<int> * , int>> q;
    q.push({root , 0 });

    map<int, int> m; // first int -> coordinate and second int describes -> last value..
    while(!q.empty())
    {
        auto p = q.front();
        q.pop();

        BinaryTreeNode<int> * node = p.first;
        int x = p.second;
        m[x] = node->data;

        if(node -> left != NULL)
        {
          q.push({node->left, x - 1});
        }
        if(node -> right != NULL)
        {
          q.push({node->right, x + 1});
        }
    }

    for(auto i:m)
    {
        ans.push_back(i.second);
    }

    return ans;
    
}
