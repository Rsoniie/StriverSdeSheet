#include <bits/stdc++.h> 
// Implement class for minStack.
class minStack
{
	// Write your code here.
		stack<int> Stack, Min;

	
	public:
		
		// Constructor
		minStack() 
		{ 
		}
		
		// Function to add another element equal to num at the top of stack.
		void push(int num)
		{
			// Write your code here.
			Stack.push(num);
			if(Min.empty() || Min.top() >= num){
				Min.push(num);
			}
		}
		
		// Function to remove the top element of the stack.
		int pop()
		{
			// Write your code here.
				if(!Min.empty() && Min.top() == Stack.top()) {
				Min.pop();
			}

			int ret = -1;

			if(!Stack.empty()) {
				ret = Stack.top();
				Stack.pop();
			}

			return ret;
		}
		
		// Function to return the top element of stack if it is present. Otherwise return -1.
		int top()
		{
			// Write your code here.
			int ret = -1;
			if(!Stack.empty()){
				ret = Stack.top();
			}
			return ret;
		}
		
		// Function to return minimum element of stack if it is present. Otherwise return -1.
		int getMin()
		{
			// Write your code here.
			int ret = -1;
			if(!Min.empty()) {
				ret = Min.top();
			}
			return ret;
		}
};
