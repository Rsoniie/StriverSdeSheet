int f(string &a, string &b, int i, int j, vector<vector<int>> &dp)
{
    if(i<0)
    {
        return j+1;
    }
    if(j<0)
    {
        return i+1;
    }
   if(dp[i][j] != -1)
   {
       return dp[i][j];
   }

    if(a[i] == b[j])
    {
       return  f(a,b,i-1, j-1, dp);
    }
    else {
        int ins = 1+f(a,b,i,j-1, dp);
        int del = 1+f(a,b,i-1, j, dp);
        int rep = 1+f(a,b,i-1, j-1, dp);


        return dp[i][j] =    min(ins, min(del, rep));
    }
}
int editDistance(string str1, string str2)
{
    int n = str1.size();
    int m = str2.size();
    vector<vector<int>> dp(n, vector<int> (m, -1));
    return f(str1, str2, n-1, m-1, dp);
}
