#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int> ans;
    if(root == NULL)
    {
        return ans;
    }
    queue<BinaryTreeNode<int> *> q;
    q.push(root);
    bool flag = true;
    while(!q.empty())
    {
        int s = q.size();
        vector<int> help;
        for(int i=0;i<s;i++)
        {
            BinaryTreeNode<int> * temp = q.front();
            q.pop();
            if(temp -> left != NULL)
            {
                q.push(temp -> left);
            }
            if(temp -> right != NULL)
            {
                q.push(temp -> right);
            }
            help.push_back(temp -> data);

        }
        if(flag == true)
        {
            ans.insert(ans.end(), help.begin(), help.end());
            flag = ! flag;
        }
        else 
        {
            reverse(help.begin(), help.end());
            ans.insert(ans.end(), help.begin(), help.end());
            flag = ! flag;
        
        }

        
    }

    return ans;

}
